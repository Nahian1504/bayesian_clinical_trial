name: Bayesian Clinical Trial CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  R_VERSION: '4.1.0'
  DOCKER_IMAGE: 'bayesian-clinical-trial'
  DOCKER_TAG: latest

jobs:
  test:
    name: Test and Validate
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ env.R_VERSION }}
          use-public-rspm: true

      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            pandoc \
            texlive-latex-base \
            texlive-fonts-recommended \
            texlive-latex-extra \
            libblas-dev \
            liblapack-dev \
            gfortran
            

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/renv
            ~/.R/Makevars
            ~/.Renviron
            ~/.Rprofile
          key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Install R dependencies
        run: |
          Rscript -e 'install.packages(c("renv", "testthat", "readr", "ggplot2", "yaml", "brms", "caret"), repos="https://packagemanager.rstudio.com/all/latest")'
          Rscript -e 'renv::restore()'

      - name: Run unit tests
        run: |
          mkdir -p test_outputs
          Rscript -e 'testthat::test_dir("tests/", stop_on_failure = TRUE)'

      - name: Validate models
        run: |
          mkdir -p test_outputs
          Rscript scripts/validate_models.R
          cp validation_results.csv validation_plot.png test_outputs/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test_outputs/
            !test_outputs/**/*.pdf

  build-and-push:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:sha-${{ github.sha }}
          build-args: |
            R_VERSION=${{ env.R_VERSION }}

  deploy:
    name: Deploy to Production
    needs: build-and-push
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
    
    steps:
      - name: Skip if KUBE_CONFIG is empty
        if: env.KUBE_CONFIG == ''
        run: |
          echo "KUBE_CONFIG is not set. Skipping deployment."
          exit 0
    
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
    
      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" > ~/.kube/config
          chmod 600 ~/.kube/config
    
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml --namespace=bayesian-trials
          kubectl rollout status deployment/bayesian-clinical-trial --namespace=bayesian-trials
          kubectl get pods -n bayesian-trials
